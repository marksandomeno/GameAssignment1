import pygame, sys, character, turtle, random

ZERO = 0

# Create Window
SCREEN_HEIGHT = 500
SCREEN_WIDTH = 1000
SCREEN_SIZE = SCREEN_WIDTH, SCREEN_HEIGHT

# counter for live score
counter = 0


# Initialize Game
pygame.init()
surface = pygame.display.set_mode(SCREEN_SIZE)
screenColor = (255, 255, 255)
surface.fill(screenColor)
screen_rect = surface.get_rect()
sky = pygame.Rect(0, 0, 1000, 400)
grass = pygame.Rect(0, 400, 1000, 100)

# Create the "Ground"
def drawGround():
    point1 = (0, 400)
    point2 = (1000, 400)
    lineColor = (0, 0, 0)
    sky = pygame.draw.rect(surface, (173,216,230), pygame.Rect(0, 0, 1000, 400))
    grass = pygame.draw.rect(surface, (124,252,0), pygame.Rect(0, 400, 1000, 100))
    stopLine = pygame.draw.line(surface, lineColor, point1, point2)

# Add Character
charSpeed = 10
charColor = (255, 0, 0)
charSize = charWidth, charHeight = 50, 50
charPos = posX, posY = 100, 350
gameChar = pygame.Rect(posX, posY, charWidth, charHeight)
pygame.draw.rect(surface, charColor, gameChar, 2)

# Add Obstacles
obstacle_width = 50
obstacle_height = 50
obstacle_color = (0, 0, 255)
obstacle_speed = 5
obstacles = []

def create_obstacle():
    obstacle_pos = (SCREEN_WIDTH, random.randint(0, 350))
    obstacle_rect = pygame.Rect(obstacle_pos[0], obstacle_pos[1], obstacle_width, obstacle_height)
    obstacles.append(obstacle_rect)


#character movements
def move_char(gameChar):
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT]:
        if(posX > ZERO):
            gameChar.move_ip(-charSpeed, 0)
    elif keys[pygame.K_RIGHT]:
        if(posX  < SCREEN_WIDTH):
            gameChar.move_ip(charSpeed, 0)
    elif keys[pygame.K_UP]:
        if(posY > ZERO):
            gameChar.move_ip(0, -charSpeed)
    elif keys[pygame.K_DOWN]:
        if(posY < 400):
            gameChar.move_ip(0, charSpeed)

# Game Loop

obstacle_timer = pygame.time.get_ticks()

running = True;
while running:
    pygame.display.set_caption("Live Score: " + str(counter))
    counter += 1

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
    move_char(gameChar)
    surface.fill(screenColor)
    drawGround()

     # Check timer to spawn obstacles
    current_time = pygame.time.get_ticks()
    if current_time - obstacle_timer > 2500:
        # print(obstacle_speed+counter*.0025)
        create_obstacle()
        obstacle_timer = current_time

    # Draw and update obstacles
    for obstacle_rect in obstacles:
        pygame.draw.rect(surface, obstacle_color, obstacle_rect)
        obstacle_rect.move_ip(-obstacle_speed-(counter*.0025), 0)


    # Check for collision with character
        if gameChar.colliderect(obstacle_rect):
            print("Collision detected!")

    pygame.draw.rect(surface, charColor, gameChar)
    pygame.display.update()

    gameChar.clamp_ip(sky) # ensure player is inside screen

# Loop Exited
pygame.quit()